---
name: Run tests

on: [push]

jobs:
  setup:
    name: Setup environment
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
  backend-test:
    name: Backend Test
    needs: [setup]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - name: Run in Docker
        working-directory: ./backend
        run: ./run-in-docker.sh
      - name: Prepare artifacts
        if: always()
        run: zip -r backend-results.zip backend/target/cucumber-html-reports
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: backend-results
          path: backend-results.zip
      - name: Notify on Build Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2.0.2
        env:
          SLACK_MESSAGE: ":alert: Backend testing failed on commit ${{ github.sha }} :alert:"
          SLACK_COLOR: "#efefef"
  performance-test:
    name: Performance Test
    needs: [setup]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - name: Run in Docker
        working-directory: ./backend
        run: ./run-in-docker-performance.sh
      - name: Prepare artifacts
        if: always()
        run: zip -r performance-results.zip backend/target/gatling
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: performance-results
          path: performance-results.zip
      - name: Notify on Build Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2.0.2
        env:
          SLACK_MESSAGE: ":alert: Performance testing failed on commit ${{ github.sha }} :alert:"
          SLACK_COLOR: "#efefef"
  frontend-test:
    name: Frontend Test
    needs: [setup]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Run Robot in Docker
        working-directory: ./frontend
        run: ./run-in-docker.sh
      - name: Prepare artifacts
        if: always()
        run: zip -r frontend-results.zip frontend/reports
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: frontend-results
          path: frontend-results.zip
      - name: Notify on Build Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2.0.2
        env:
          SLACK_MESSAGE: ":alert: Frontend testing failed on commit ${{ github.sha }} :alert:"
          SLACK_COLOR: "#efefef"
